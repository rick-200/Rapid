var console = import("console");
console.print(123);
var x={
a:"aaaa",
b:4.5
};
x.b+=1;
console.print(x.a);
console.print(x.b);
/*
var console = import("console");

func for_each(arr,f){
    for(var i=0;i<arr.length;i+=1)
        f(arr[i]);
}

func map(arr,f){
    var new_arr=[];
    func iter(x){
        new_arr.push(f(x));
    }
    for_each(arr,iter);
    return new_arr;
}

func sum(arr){
    var res=0;
    func get_sum(x){
        res+=x;
    }
    for_each(arr,get_sum);
    return res;
}


var arr=[0,1,2,3,4,5,6,7,8,9];

console.print(arr);

func add(x,y){
    return x+y;
}

func place_right(f,b){
    func invoke(a){
        return f(a,b);
    }
    return invoke;
}

var add10=place_right(add,10);


console.print(map(arr,add10));
console.print(sum(arr));
*/

/*
push i
i=begin
push end
push step
for_range_start i l_end
for_range_end i l_start

for range(i:0,arr.length,1){
    
}
for range(i:arr.length){
    
}
for each(v:arr){

}
var a=1,b=0.1;
try{
    a = a & b;
    console.print("a", a);
}catch(e){
    console.print("error",e);
}finally{
    console.print("finally");
}
*/
/*
var tb={
    "aaa":1,
    bbb:2
};
tb["ccc"]=3;
tb["bbb"]=4;
console.print(tb);
*/
/*

func new_counter(){
  int x=0;
  func inc(){
      x+=1;
  }
  func dec(){
      x-=1;
  }
  func val(){
      return x;
  }
  inc();
  dec();
  return [inc, dec, val];
}

var counter = new_counter();


var arr = [];
for(var i=0;i<100;i+=1)
    arr.push(i);
console.print(arr);*/
/*for(var i=0;i<100000000;i+=1){}*/

/*
func add(a,b){
    var xxx=[123];
    return a+b;
}
for(var i=0;i<10000;i+=1){
var test_gc=[1,2,3,4,add(5,6)];
}
*/

/*
var console=import("console");
func add(a,b){
    var xxx=[123];
    return a+b;
}
for(var i=0;i<1000000;i+=1){
var test_gc=[1,2,3,4];
}
var arr = [123,45.6,add(123,456)];
arr.push(321);
console.print("array:");
for(var i=0;i<arr.length;i+=1){
    console.print(arr[i]);
}

function Animal(name){
    function new(){
        var _x,_y;
        var func_table={
            move: function(x,y){
                _x=x;
                _y=y;
            }
        }
        return object.create(func_table);
    }
    var ret=new();
    ret.name=name;
    return ret;
}


*/